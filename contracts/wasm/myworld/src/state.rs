// Copyright 2020 IOTA Stiftung
// SPDX-License-Identifier: Apache-2.0

// (Re-)generated by schema tool
// >>>> DO NOT CHANGE THIS FILE! <<<<
// Change the json schema instead

#![allow(dead_code)]
#![allow(unused_imports)]

use wasmlib::*;
use wasmlib::host::*;

use crate::*;
use crate::keys::*;
use crate::structs::*;

#[derive(Clone, Copy)]
pub struct ImmutableMyWorldState {
    pub(crate) id: i32,
}

impl ImmutableMyWorldState {
    pub fn owner(&self) -> ScImmutableAgentID {
		ScImmutableAgentID::new(self.id, idx_map(IDX_STATE_OWNER))
	}

    pub fn treasures(&self) -> ArrayOfImmutableTreasure {
		let arr_id = get_object_id(self.id, idx_map(IDX_STATE_TREASURES), TYPE_ARRAY | TYPE_BYTES);
		ArrayOfImmutableTreasure { obj_id: arr_id }
	}
}

#[derive(Clone, Copy)]
pub struct MutableMyWorldState {
    pub(crate) id: i32,
}

impl MutableMyWorldState {
    pub fn owner(&self) -> ScMutableAgentID {
		ScMutableAgentID::new(self.id, idx_map(IDX_STATE_OWNER))
	}

    pub fn treasures(&self) -> ArrayOfMutableTreasure {
		let arr_id = get_object_id(self.id, idx_map(IDX_STATE_TREASURES), TYPE_ARRAY | TYPE_BYTES);
		ArrayOfMutableTreasure { obj_id: arr_id }
	}
}
