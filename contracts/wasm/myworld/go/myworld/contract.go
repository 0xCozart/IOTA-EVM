// Copyright 2020 IOTA Stiftung
// SPDX-License-Identifier: Apache-2.0

// (Re-)generated by schema tool
// >>>> DO NOT CHANGE THIS FILE! <<<<
// Change the json schema instead

package myworld

import "github.com/iotaledger/wasp/packages/vm/wasmlib/go/wasmlib"

type DepositTreasureCall struct {
	Func   *wasmlib.ScFunc
	Params MutableDepositTreasureParams
}

type InitCall struct {
	Func   *wasmlib.ScInitFunc
	Params MutableInitParams
}

type SetOwnerCall struct {
	Func   *wasmlib.ScFunc
	Params MutableSetOwnerParams
}

type GetAllTreasuresCall struct {
	Func    *wasmlib.ScView
	Results ImmutableGetAllTreasuresResults
}

type GetOwnerCall struct {
	Func    *wasmlib.ScView
	Results ImmutableGetOwnerResults
}

type Funcs struct{}

var ScFuncs Funcs

func (sc Funcs) DepositTreasure(ctx wasmlib.ScFuncCallContext) *DepositTreasureCall {
	f := &DepositTreasureCall{Func: wasmlib.NewScFunc(ctx, HScName, HFuncDepositTreasure)}
	f.Func.SetPtrs(&f.Params.id, nil)
	return f
}

func (sc Funcs) Init(ctx wasmlib.ScFuncCallContext) *InitCall {
	f := &InitCall{Func: wasmlib.NewScInitFunc(ctx, HScName, HFuncInit, keyMap[:], idxMap[:])}
	f.Func.SetPtrs(&f.Params.id, nil)
	return f
}

func (sc Funcs) SetOwner(ctx wasmlib.ScFuncCallContext) *SetOwnerCall {
	f := &SetOwnerCall{Func: wasmlib.NewScFunc(ctx, HScName, HFuncSetOwner)}
	f.Func.SetPtrs(&f.Params.id, nil)
	return f
}

func (sc Funcs) GetAllTreasures(ctx wasmlib.ScViewCallContext) *GetAllTreasuresCall {
	f := &GetAllTreasuresCall{Func: wasmlib.NewScView(ctx, HScName, HViewGetAllTreasures)}
	f.Func.SetPtrs(nil, &f.Results.id)
	return f
}

func (sc Funcs) GetOwner(ctx wasmlib.ScViewCallContext) *GetOwnerCall {
	f := &GetOwnerCall{Func: wasmlib.NewScView(ctx, HScName, HViewGetOwner)}
	f.Func.SetPtrs(nil, &f.Results.id)
	return f
}
