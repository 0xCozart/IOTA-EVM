// Copyright 2020 IOTA Stiftung
// SPDX-License-Identifier: Apache-2.0

// (Re-)generated by schema tool
// >>>> DO NOT CHANGE THIS FILE! <<<<
// Change the json schema instead

package myworld

import "github.com/iotaledger/wasp/packages/vm/wasmlib/go/wasmlib"

type ArrayOfImmutableTreasure struct {
	objID int32
}

func (a ArrayOfImmutableTreasure) Length() int32 {
	return wasmlib.GetLength(a.objID)
}

func (a ArrayOfImmutableTreasure) GetTreasure(index int32) ImmutableTreasure {
	return ImmutableTreasure{objID: a.objID, keyID: wasmlib.Key32(index)}
}

type ImmutableGetAllTreasuresResults struct {
	id int32
}

func (s ImmutableGetAllTreasuresResults) Treasures() ArrayOfImmutableTreasure {
	arrID := wasmlib.GetObjectID(s.id, idxMap[IdxResultTreasures], wasmlib.TYPE_ARRAY|wasmlib.TYPE_BYTES)
	return ArrayOfImmutableTreasure{objID: arrID}
}

type ArrayOfMutableTreasure struct {
	objID int32
}

func (a ArrayOfMutableTreasure) Clear() {
	wasmlib.Clear(a.objID)
}

func (a ArrayOfMutableTreasure) Length() int32 {
	return wasmlib.GetLength(a.objID)
}

func (a ArrayOfMutableTreasure) GetTreasure(index int32) MutableTreasure {
	return MutableTreasure{objID: a.objID, keyID: wasmlib.Key32(index)}
}

type MutableGetAllTreasuresResults struct {
	id int32
}

func (s MutableGetAllTreasuresResults) Treasures() ArrayOfMutableTreasure {
	arrID := wasmlib.GetObjectID(s.id, idxMap[IdxResultTreasures], wasmlib.TYPE_ARRAY|wasmlib.TYPE_BYTES)
	return ArrayOfMutableTreasure{objID: arrID}
}

type ImmutableGetOwnerResults struct {
	id int32
}

func (s ImmutableGetOwnerResults) Owner() wasmlib.ScImmutableAgentID {
	return wasmlib.NewScImmutableAgentID(s.id, idxMap[IdxResultOwner])
}

type MutableGetOwnerResults struct {
	id int32
}

func (s MutableGetOwnerResults) Owner() wasmlib.ScMutableAgentID {
	return wasmlib.NewScMutableAgentID(s.id, idxMap[IdxResultOwner])
}
