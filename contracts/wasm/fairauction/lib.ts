// Copyright 2020 IOTA Stiftung
// SPDX-License-Identifier: Apache-2.0

// (Re-)generated by schema tool
// >>>> DO NOT CHANGE THIS FILE! <<<<
// Change the json schema instead

import * as wasmlib from "../wasmlib"
import * as sc from "./index";

export function on_call(index: i32): void {
    return wasmlib.onCall(index);
}

export function on_load(): void {
    let exports = new wasmlib.ScExports();
    exports.addFunc(sc.FuncFinalizeAuction, funcFinalizeAuctionThunk);
    exports.addFunc(sc.FuncPlaceBid, funcPlaceBidThunk);
    exports.addFunc(sc.FuncSetOwnerMargin, funcSetOwnerMarginThunk);
    exports.addFunc(sc.FuncStartAuction, funcStartAuctionThunk);
    exports.addView(sc.ViewGetInfo, viewGetInfoThunk);

    for (let i = 0; i < sc.keyMap.length; i++) {
        sc.idxMap[i] = wasmlib.Key32.fromString(sc.keyMap[i]);
    }
}

export class FinalizeAuctionContext {
    params: sc.ImmutableFinalizeAuctionParams = new sc.ImmutableFinalizeAuctionParams();
    state: sc.MutableFairAuctionState = new sc.MutableFairAuctionState();
}

function funcFinalizeAuctionThunk(ctx: wasmlib.ScFuncContext): void {
    ctx.log("fairauction.funcFinalizeAuction");
    // only SC itself can invoke this function
    ctx.require(ctx.caller().equals(ctx.accountID()), "no permission");

    let f = new FinalizeAuctionContext();
    f.params.mapID = wasmlib.OBJ_ID_PARAMS;
    f.state.mapID = wasmlib.OBJ_ID_STATE;
    ctx.require(f.params.color().exists(), "missing mandatory color")
    sc.funcFinalizeAuction(ctx, f);
    ctx.log("fairauction.funcFinalizeAuction ok");
}

export class PlaceBidContext {
    params: sc.ImmutablePlaceBidParams = new sc.ImmutablePlaceBidParams();
    state: sc.MutableFairAuctionState = new sc.MutableFairAuctionState();
}

function funcPlaceBidThunk(ctx: wasmlib.ScFuncContext): void {
    ctx.log("fairauction.funcPlaceBid");
    let f = new PlaceBidContext();
    f.params.mapID = wasmlib.OBJ_ID_PARAMS;
    f.state.mapID = wasmlib.OBJ_ID_STATE;
    ctx.require(f.params.color().exists(), "missing mandatory color")
    sc.funcPlaceBid(ctx, f);
    ctx.log("fairauction.funcPlaceBid ok");
}

export class SetOwnerMarginContext {
    params: sc.ImmutableSetOwnerMarginParams = new sc.ImmutableSetOwnerMarginParams();
    state: sc.MutableFairAuctionState = new sc.MutableFairAuctionState();
}

function funcSetOwnerMarginThunk(ctx: wasmlib.ScFuncContext): void {
    ctx.log("fairauction.funcSetOwnerMargin");
    // only SC creator can set owner margin
    ctx.require(ctx.caller().equals(ctx.contractCreator()), "no permission");

    let f = new SetOwnerMarginContext();
    f.params.mapID = wasmlib.OBJ_ID_PARAMS;
    f.state.mapID = wasmlib.OBJ_ID_STATE;
    ctx.require(f.params.ownerMargin().exists(), "missing mandatory ownerMargin")
    sc.funcSetOwnerMargin(ctx, f);
    ctx.log("fairauction.funcSetOwnerMargin ok");
}

export class StartAuctionContext {
    params: sc.ImmutableStartAuctionParams = new sc.ImmutableStartAuctionParams();
    state: sc.MutableFairAuctionState = new sc.MutableFairAuctionState();
}

function funcStartAuctionThunk(ctx: wasmlib.ScFuncContext): void {
    ctx.log("fairauction.funcStartAuction");
    let f = new StartAuctionContext();
    f.params.mapID = wasmlib.OBJ_ID_PARAMS;
    f.state.mapID = wasmlib.OBJ_ID_STATE;
    ctx.require(f.params.color().exists(), "missing mandatory color")
    ctx.require(f.params.minimumBid().exists(), "missing mandatory minimumBid")
    sc.funcStartAuction(ctx, f);
    ctx.log("fairauction.funcStartAuction ok");
}

export class GetInfoContext {
    params: sc.ImmutableGetInfoParams = new sc.ImmutableGetInfoParams();
    results: sc.MutableGetInfoResults = new sc.MutableGetInfoResults();
    state: sc.ImmutableFairAuctionState = new sc.ImmutableFairAuctionState();
}

function viewGetInfoThunk(ctx: wasmlib.ScViewContext): void {
    ctx.log("fairauction.viewGetInfo");
    let f = new GetInfoContext();
    f.params.mapID = wasmlib.OBJ_ID_PARAMS;
    f.results.mapID = wasmlib.OBJ_ID_RESULTS;
    f.state.mapID = wasmlib.OBJ_ID_STATE;
    ctx.require(f.params.color().exists(), "missing mandatory color")
    sc.viewGetInfo(ctx, f);
    ctx.log("fairauction.viewGetInfo ok");
}
